<%- include('../../includes/header') %>
<%- include('../../includes/top') %>


<h1>MQTT Node.js</h1>
<h2>Subscriber</h2>
<div class="line"></div>
<ul class="wrapper">
    <li class="form-row">
        <label for="topic">Topic</label>
        <input type="text" id="topic" />
    </li>
    <li class="form-row">
        <label for="message">Message</label>
        <textarea id="message" name="message" rows="10" readonly></textarea>
    </li>
    <li class="form-row">
        <label for="status">Status</label>
        <input type="text" id="status" readonly />
    </li>
    <li class="form-row">
        <div class="btn-container">
            <button type="button" id="subscribe">Subscribe</button>
            <button type="button" id="unsubscribe">Unsubscribe</button>
            <button type="button" id="aaaaaa">aaaaaa</button>
        </div>
    </li>
</ul>





<script src="/javascripts/mqtt.min.js"></script>
<script>
    let mqttClient;

    window.addEventListener("load", (event) => {
        connectToBroker();

        const subscribeBtn = document.querySelector("#subscribe");
        subscribeBtn.addEventListener("click", function () {
            subscribeToTopic();
        });

        const unsubscribeBtn = document.querySelector("#unsubscribe");
        unsubscribeBtn.addEventListener("click", function () {
            unsubscribeToTopic();
        });
    });

    function connectToBroker() {
        const clientId = "client" + Math.random().toString(36).substring(7);

        // Change this to point to your MQTT broker
        const host = "ws://172.26.10.138:9001/mqtt";

        const options = {
            keepalive: 60,
            clientId: clientId,
            protocolId: "MQTT",
            protocolVersion: 4,
            clean: true,
            reconnectPeriod: 1000,
            connectTimeout: 30 * 1000,
        };

        mqttClient = mqtt.connect(host, options);

        mqttClient.on("error", (err) => {
            console.log("Error: ", err);
            mqttClient.end();
        });

        mqttClient.on("reconnect", () => {
            console.log("Reconnecting...");
        });

        mqttClient.on("connect", () => {
            console.log("Client connected:" + clientId);
        });

        // Received
        mqttClient.on("message", (topic, message, packet) => {
            console.log(
                "Received Message: " + message.toString() + "\nOn topic: " + topic
            );
            const messageTextArea = document.querySelector("#message");
            messageTextArea.value += message + "\r\n";
        });
    }

    function subscribeToTopic() {
        const status = document.querySelector("#status");
        const topic = document.querySelector("#topic").value.trim();
        console.log(`Subscribing to Topic: ${topic}`);

        mqttClient.subscribe(topic, {
            qos: 0
        });
        status.style.color = "green";
        status.value = "SUBSCRIBED";
    }

    function unsubscribeToTopic() {
        const status = document.querySelector("#status");
        const topic = document.querySelector("#topic").value.trim();
        console.log(`Unsubscribing to Topic: ${topic}`);

        mqttClient.unsubscribe(topic, {
            qos: 0
        });
        status.style.color = "red";
        status.value = "UNSUBSCRIBED";
    }





    $('#aaaaaa').on('click', () => {




        fetch('/monitoring/printer/test', {
            method: 'POST'
        }).then(res => {
            if (res.ok) return res.json();
            throw new Error('Request failed.');
        }).then(data => {
            console.log(data)
        }).catch(err => {
            console.error(err)
        })



        /* $.ajax({
            type: "POST",
            url: "/monitoring/printer/test",
            data: "data",
            dataType: "json",
            success: function (response) {
                console.log(response)
            },
            error: function (a, b, c) {
                console.error(a)
            }
        }); */
    })
</script>

<%- include('../../includes/footer') %>